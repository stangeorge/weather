/*
Run ./gradlew idea

Clean and build a jar with embedded Tomcat
------------------------------------------
./gradlew \
  clean \
  build -Dorg.gradle.java.home=/Users/stan/jdk-11.0.2.jdk/Contents/Home \
  bootJar \
  && /Users/stan/jdk-11.0.2.jdk/Contents/Home/bin/java -jar build/libs/weather-0.1.0.jar

Dockerize and push to docker-hub
------------------------------------------
./gradlew jib -Dorg.gradle.java.home=/Users/stan/jdk-11.0.2.jdk/Contents/Home

EC2 Instance
------------------------------------------
*Launch Instance
*Download pem file and do below on macos/linux
chmod 600 ../Desktop/t2micro.pem.txt
*SSH into the EC2 Instance
sudo ssh -i ../Desktop/t2micro.pem.txt ec2-user@<IP-ADDRESS>
ssh -i "t2micro.pem" ec2-user@54.237.213.143
sudo yum update -y
sudo yum install -y docker
sudo service docker start
sudo usermod -a -G docker ec2-user
exit
* EXIT and SSH back in

RUN THE APP
------------------------------------------
docker run -d -p 80:8080 stanleygeorge/weather:latest --name weather
curl http://localhost
curl "http://localhost?[1-10]"
docker stats
docker ps
docker stop 8dabb790acca

Install Jenkins
------------------------------------------
docker pull jenkins/jenkins:lts
dockerun -p 8080:8080 -p 50000:50000 jenkins/jenkins:lts
Install Jenkins plugins, create admin user, configure build

*/
buildscript {
	ext {
		springBootVersion = '2.1.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")

	}
}

plugins {
    id 'com.google.cloud.tools.jib' version '1.0.0'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.stanleygeorge'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
targetCompatibility = '11'

bootJar {
	baseName = 'weather'
	version =  '0.1.0'
}

jib {
    //from.image = 'openjdk:11-jdk-alpine'
    from {
        image = 'openjdk:11.0.2-jdk-stretch'
        auth {
            username = USERNAME
            password = PASSWORD
        }
    }
    to {
        image = 'registry.hub.docker.com/stanleygeorge/weather'
        auth {
            username = USERNAME
            password = PASSWORD
        }
    }
}

repositories {
	mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    testCompile("junit:junit")
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}
